Options name: "main_stack"

Network :ingress_routing, external: true
Network :postgres_net

Service :postgres, image: 'postgres:17' do
  env POSTGRES_DB: '${POSTGRES_DB}', POSTGRES_USER: '${POSTGRES_DB_USER}', POSTGRES_PASSWORD: '${POSTGRES_DB_PASSWORD}'
  volume 'postgres_data:/var/lib/postgresql/data'
  deploy placement: { constraints: ['node.role == manager'] }
  network :postgres_net
end

Service :pgweb, image: 'sosedoff/pgweb:0.16.1' do
  env PGWEB_DATABASE_URL: 'postgres://${POSTGRES_DB_USER}:${POSTGRES_DB_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable'
  deploy_label(
    "traefik.enable": 'true',
    "traefik.http.routers.pgweb.rule": 'Host(`pgweb.simple-track.ru`)',
    "traefik.http.services.pgweb.loadbalancer.server.port": 8081,
    "traefik.http.routers.pgweb.tls": 'true',
    "traefik.http.routers.pgweb.tls.certresolver": 'le'
  )
  network :ingress_routing, :postgres_net
end

Service :simpletracker, image: '${REGISTRY_HOST}/simpletracker/${CI_COMMIT_BRANCH}:latest' do
  env POSTGRES_DB: '${POSTGRES_DB}', POSTGRES_USER: '${POSTGRES_DB_USER}', POSTGRES_PASSWORD: '${POSTGRES_DB_PASSWORD}'
  deploy_label(
    "traefik.enable": 'true',
    "traefik.http.routers.simpletracker.rule": 'Host(`main.simple-track.ru`)',
    "traefik.http.services.simpletracker.loadbalancer.server.port": 8080,
    "traefik.http.routers.simpletracker.tls": 'true',
    "traefik.http.routers.simpletracker.tls.certresolver": 'le'
  )
  network :ingress_routing, :postgres_net
end

Service :rest_server_cpp, image: '${REGISTRY_HOST}/rest-cxx/${CI_COMMIT_BRANCH}:latest' do
  env DB_URL: 'postgres://${POSTGRES_DB_USER}:${POSTGRES_DB_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable', PORT: 8080
  deploy_label(
    "traefik.enable": 'true',
    "traefik.http.routers.rest-server-cpp.rule": 'Host(`cpp.simple-track.ru`)',
    "traefik.http.services.rest-server-cpp.loadbalancer.server.port": 8080,
    "traefik.http.routers.rest-server-cpp.tls": 'true',
    "traefik.http.routers.rest-server-cpp.tls.certresolver": 'le'
  )
  network :ingress_routing, :postgres_net
end

Service :python_api, image: '${REGISTRY_HOST}/python-flask-api/${CI_COMMIT_BRANCH}' do
  env POSTGRES_DB: '${POSTGRES_DB}', POSTGRES_USER: '${POSTGRES_DB_USER}', POSTGRES_PASSWORD: '${POSTGRES_DB_PASSWORD}', FLASK_APP_PORT: 8080
  deploy_label(
    "traefik.enable": 'true',
    "traefik.http.routers.python-api.rule": 'Host(`flask.simple-track.ru`)',
    "traefik.http.services.python-api.loadbalancer.server.port": 8080,
    "traefik.http.routers.python-api.tls": 'true',
    "traefik.http.routers.python-api.tls.certresolver": 'le'
  )
  network :ingress_routing, :postgres_net
end

Volume :postgres_data