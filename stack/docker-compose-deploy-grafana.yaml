version: '3.8'
services:
  tempo:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: tempo
    deploy:
      labels:
        - stack.product=tempo
    init: true
    image: grafana/tempo
    command: "-config.file=/etc/tempo.yaml"
    volumes:
      - target: "/var/tempo"
        type: volume
        source: grafana_tempo-volume-0
    configs:
      - source: tempo_yaml
        target: "/etc/tempo.yaml"
    logging:
      driver: loki
      options:
        loki-url: http://loki:3100/loki/api/v1/push
        loki-batch-size: 100
        loki-retries: 2
        loki-max-backoff: 1000ms
        loki-timeout: 1s
  prometheus:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: prometheus
    deploy:
      labels:
        - stack.product=tempo
    networks:
      grafana-network:
      default:
    init: true
    image: prom/prometheus
    command:
      - "--web.enable-remote-write-receiver"
      - "--enable-feature=exemplar-storage"
      - "--config.file=/etc/prometheus.yaml"
    volumes:
      - target: "/prometheus"
        type: volume
        source: grafana_prometheus-volume-0
    configs:
      - source: grafana_prometheus-config-0
        target: "/etc/prometheus.yaml"
    logging:
      driver: loki
      options:
        loki-url: http://loki:3100/loki/api/v1/push
        loki-batch-size: 100
        loki-retries: 2
        loki-max-backoff: 1000ms
        loki-timeout: 1s
  grafana:
    environment:
      GF_ADMIN_USER: admin
      GF_ADMIN_PASSWORD: password
      GF_AUTH_ANONYMOUS_ENABLED: 'false'
      STACK_NAME: grafana
      STACK_SERVICE_NAME: grafana
    deploy:
      labels:
        - stack.product=tempo
        - traefik.enable=true
        - traefik.http.routers.grafana_grafana-0.service=grafana_grafana-0
        - traefik.http.services.grafana_grafana-0.loadbalancer.server.port=3000
        - traefik.http.routers.grafana_grafana-0.rule=HostRegexp(`{name:tempo\..*}`)
    networks:
      grafana-network:
      default:
      ingress_routing:
    init: true
    image: grafana/grafana:10.4.2
    configs:
      - source: grafana_datasources_yaml
        target: "/etc/grafana/provisioning/datasources/datasources.yaml"
      - source: grafana_dashboards_yaml
        target: "/etc/grafana/provisioning/dashboards/main.yaml"
      - source: grafana_grafana-config-2
        target: "/var/lib/grafana/dashboards/traefik.json"
      - source: grafana_grafana-config-3
        target: "/var/lib/grafana/dashboards/cadvisor.json"
      - source: grafana_grafana-config-4
        target: "/var/lib/grafana/dashboards/cadvisor2.json"
      - source: grafana_grafana-config-5
        target: "/var/lib/grafana/dashboards/node_exporter.json"
      - source: grafana_grafana-config-6
        target: "/var/lib/grafana/dashboards/swarm_stack.json"
      - source: grafana_grafana-config-7
        target: "/etc/grafana/provisioning/alerting/alert_rules.yaml"
      - source: grafana_grafana-config-8
        target: "/etc/grafana/provisioning/alerting/policies.yaml"
      - source: grafana_grafana-config-9
        target: "/etc/grafana/provisioning/alerting/contact_points.yaml"
    logging:
      driver: loki
      options:
        loki-url: http://loki:3100/loki/api/v1/push
        loki-batch-size: 100
        loki-retries: 2
        loki-max-backoff: 1000ms
        loki-timeout: 1s
  loki:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: loki
    deploy:
      labels:
        - stack.product=tempo
      placement:
        constraints:
          - node.role == manager
    networks:
      grafana-network:
      default:
    init: true
    image: grafana/loki
    ports:
      - 3100:3100
    command: |
      -config.file=/etc/loki/local-config.yaml
      -boltdb.shipper.compactor.ring.instance-addr=127.0.0.1
      -distributor.ring.instance-addr=127.0.0.1
      -frontend.instance-addr=127.0.0.1
      -index-gateway.ring.instance-addr=127.0.0.1
      -ingester.lifecycler.addr=127.0.0.1
      -query-scheduler.ring.instance-addr=127.0.0.1
      -ruler.ring.instance-addr=127.0.0.1
    volumes:
      - target: "/data"
        type: volume
        source: grafana_loki-volume-0
    user: '0:0'
    configs:
      - source: grafana_loki-config-0
        target: "/etc/loki/local-config.yaml"
  promtail:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: promtail
    deploy:
      labels:
        - stack.product=tempo
      mode: global
    networks:
      grafana-network:
      default:
    init: true
    image: grafana/promtail
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/log:/var/log"
      - target: "/etc/promtail"
        type: volume
        source: grafana_promtail-volume-3
    command: "-config.file=/etc/promtail/promtail-config.yml"
    configs:
      - source: grafana_promtail-config-0
        target: "/etc/promtail/promtail-config.yml"
  cadvisor:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: cadvisor
    deploy:
      labels:
        - stack.product=tempo
        - traefik.enable=true
        - traefik.http.routers.grafana_cadvisor-0.service=grafana_cadvisor-0
        - traefik.http.services.grafana_cadvisor-0.loadbalancer.server.port=8080
        - traefik.http.routers.grafana_cadvisor-0.rule=HostRegexp(`{name:cadvisor\..*}`)
      placement:
        constraints:
          - node.role == manager
    networks:
      grafana-network:
      default:
      ingress_routing:
    init: true
    image: fefx/gcr.io.cadvisor.cadvisor:v0.49.1
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    logging:
      driver: loki
      options:
        loki-url: http://loki:3100/loki/api/v1/push
        loki-batch-size: 100
        loki-retries: 2
        loki-max-backoff: 1000ms
        loki-timeout: 1s
  node_exporter:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: node_exporter
    deploy:
      labels:
        - stack.product=tempo
      mode: global
    init: true
    image: prom/node-exporter
    volumes:
      - "/:/host:ro,rslave"
    command: "--path.rootfs=/host"
  docker_state_exporter:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: docker_state_exporter
    deploy:
      labels:
        - stack.product=tempo
    init: true
    image: karugaru/docker_state_exporter
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  otlp_collector:
    environment:
      STACK_NAME: grafana
      STACK_SERVICE_NAME: otlp_collector
    deploy:
      labels:
        - stack.product=tempo
        - traefik.enable=true
        - traefik.http.routers.grafana_otlp_collector-0.service=grafana_otlp_collector-0
        - traefik.http.services.grafana_otlp_collector-0.loadbalancer.server.port=4318
        - traefik.http.routers.grafana_otlp_collector-0.rule=HostRegexp(`{name:otel\..*}`)
        - traefik.http.routers.grafana_otlp_collector-1.service=grafana_otlp_collector-1
        - traefik.http.services.grafana_otlp_collector-1.loadbalancer.server.port=4318
        - traefik.http.routers.grafana_otlp_collector-1.rule=HostRegexp(`{name:.*}`)
          && PathPrefix(`/otel`)
        - traefik.http.middlewares.grafana_otlp_collector-1-path_sub.replacepathregex.regex=^/otel(.*)
        - traefik.http.middlewares.grafana_otlp_collector-1-path_sub.replacepathregex.replacement=$$1
        - traefik.http.routers.grafana_otlp_collector-1.middlewares=grafana_otlp_collector-1-path_sub
        - traefik.http.routers.grafana_otlp_collector-2.service=grafana_otlp_collector-2
        - traefik.http.services.grafana_otlp_collector-2.loadbalancer.server.port=4317
        - traefik.http.routers.grafana_otlp_collector-2.rule=HostRegexp(`{name:otel\..*}`)
          && PathPrefix(`/grpc`)
        - traefik.http.middlewares.grafana_otlp_collector-2-path_sub.replacepathregex.regex=^/grpc(.*)
        - traefik.http.middlewares.grafana_otlp_collector-2-path_sub.replacepathregex.replacement=$$1
        - traefik.http.routers.grafana_otlp_collector-2.middlewares=grafana_otlp_collector-2-path_sub
        - traefik.http.routers.grafana_otlp_collector-3.service=grafana_otlp_collector-3
        - traefik.http.services.grafana_otlp_collector-3.loadbalancer.server.port=4317
        - traefik.http.routers.grafana_otlp_collector-3.rule=HostRegexp(`{name:.*}`)
          && PathPrefix(`/otel/grpc`)
        - traefik.http.middlewares.grafana_otlp_collector-3-path_sub.replacepathregex.regex=^/otel\/grpc(.*)
        - traefik.http.middlewares.grafana_otlp_collector-3-path_sub.replacepathregex.replacement=$$1
        - traefik.http.routers.grafana_otlp_collector-3.middlewares=grafana_otlp_collector-3-path_sub
    networks:
      grafana-network:
      default:
      ingress_routing:
    init: true
    image: otel/opentelemetry-collector-contrib:0.102.0
    configs:
      - source: otlp_yaml
        target: "/etc/otelcol-contrib/config.yaml"
volumes:
  grafana_tempo-volume-0:
    name: tempo_data
  grafana_prometheus-volume-0:
    name: prometheus_data
  grafana_loki-volume-0:
    name: loki_data
  grafana_promtail-volume-3:
    external: false
networks:
  grafana-network:
    external: true
  ingress_routing:
    external: true
    name: ingress-routing
configs:
  otlp_yaml:
    name: otlp_yaml-19e3a3e90063763052308f10052690ac
    file: "./grafana.config.otlp_yaml.19e3a3e90063763052308f10052690ac"
  tempo_yaml:
    name: tempo_yaml-9336cd7db1f37ba3c7797366f243d4ab
    file: "./grafana.config.tempo_yaml.9336cd7db1f37ba3c7797366f243d4ab"
  grafana_datasources_yaml:
    name: grafana_datasources_yaml-f7da86b052acfc6cdebe2af00e2d40c2
    file: "./grafana.config.grafana_datasources_yaml.f7da86b052acfc6cdebe2af00e2d40c2"
  grafana_dashboards_yaml:
    name: grafana_dashboards_yaml-206a34dc77dc394d78a207c7abde327d
    file: "./grafana.config.grafana_dashboards_yaml.206a34dc77dc394d78a207c7abde327d"
  grafana_prometheus-config-0:
    name: grafana_prometheus-config-0-e7abab0c615bf9b543f2ad7c6d2d88c4
    file: "./grafana.config.grafana_prometheus-config-0.e7abab0c615bf9b543f2ad7c6d2d88c4"
  grafana_grafana-config-2:
    name: grafana_grafana-config-2-d41d8cd98f00b204e9800998ecf8427e
    file: "./dashboards/traefik.json"
  grafana_grafana-config-3:
    name: grafana_grafana-config-3-d41d8cd98f00b204e9800998ecf8427e
    file: "./dashboards/cadvisor.json"
  grafana_grafana-config-4:
    name: grafana_grafana-config-4-d41d8cd98f00b204e9800998ecf8427e
    file: "./dashboards/cadvisor2.json"
  grafana_grafana-config-5:
    name: grafana_grafana-config-5-d41d8cd98f00b204e9800998ecf8427e
    file: "./dashboards/node_exporter.json"
  grafana_grafana-config-6:
    name: grafana_grafana-config-6-d41d8cd98f00b204e9800998ecf8427e
    file: "./dashboards/swarm_stack.json"
  grafana_grafana-config-7:
    name: grafana_grafana-config-7-d41d8cd98f00b204e9800998ecf8427e
    file: "./alerting/alert_rules.yaml"
  grafana_grafana-config-8:
    name: grafana_grafana-config-8-d41d8cd98f00b204e9800998ecf8427e
    file: "./alerting/policies.yaml"
  grafana_grafana-config-9:
    name: grafana_grafana-config-9-f5af5dd5a4fceca11b07187eb60d7984
    file: "./grafana.config.grafana_grafana-config-9.f5af5dd5a4fceca11b07187eb60d7984"
  grafana_loki-config-0:
    name: grafana_loki-config-0-d382a870c3486488b45958743d0b2358
    file: "./grafana.config.grafana_loki-config-0.d382a870c3486488b45958743d0b2358"
  grafana_promtail-config-0:
    name: grafana_promtail-config-0-e9a64e33e35a788430e34e8737f0fa33
    file: "./grafana.config.grafana_promtail-config-0.e9a64e33e35a788430e34e8737f0fa33"
