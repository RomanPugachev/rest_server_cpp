# Test comment
services:

  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker.swarmMode=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=pugachev.ra@yandex.ru"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt.acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencryt:/letsencrypt
    deploy:
      mode: global
      endpoint_mode: vip
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.simple-track.ru`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  pgweb:
    image: sosedoff/pgweb:0.16.1
    environment:
      - PGWEB_DATABASE_URL=postgres://myuser:mypassword@postgres:5432/mydatabase?sslmode=disable
    deploy:
      mode: global
      endpoint_mode: vip
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pgweb.rule=Host(`pgweb.simple-track.ru`)"
        - "traefik.http.services.pgweb.loadbalancer.server.port=8081"
        - "traefik.http.routers.pgweb.tls.certresolver=myresolver"
      restart_policy:
          condition: on-failure

  simpletracker:
    image: ${REGISTRY_HOST}/simpletracker/${CI_COMMIT_BRANCH}:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.simpletracker.rule=Host(`main.simple-track.ru`)"
        - "traefik.http.services.simpletracker.loadbalancer.server.port=8080"
        - "traefik.http.routers.simpletracker.tls.certresolver=myresolver"
      restart_policy:
        condition: on-failure

  rest-server-cpp:
    image: ${REGISTRY_HOST}/rest-cxx/${CI_COMMIT_BRANCH}:latest
    environment:
      DB_URL: postgres://myuser:mypassword@postgres:5432/mydatabase?sslmode=disable
      PORT: 8080
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: vip
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.rest-server-cpp.rule=Host(`cpp.simple-track.ru`)"
        - "traefik.http.services.rest-server-cpp.loadbalancer.server.port=8080"
        - "traefik.http.routers.rest-server-cpp.tls.certresolver=myresolver"
      restart_policy:
        condition: on-failure
