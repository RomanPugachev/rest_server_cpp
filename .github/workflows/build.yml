on:
  workflow_dispatch:
  push: { branches: [main, master, release] }

jobs:
#  build-push-deploy:
#    runs-on: ubuntu-24.04
#    permissions: { contents: read, packages: write }
#    steps:
#      - uses: actions/checkout@v3
#      - uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - uses: docker/setup-buildx-action@v2
#      - run: |
#          cd docker
#          export $(grep -v '^#' .env | xargs)
#          export REPOSITORY_OWNER=${{ github.repository_owner}}
#          export REGISTRY_HOST=ghcr.io/${REPOSITORY_OWNER,,}/${{ github.event.repository.name }}
#          export CI_COMMIT_BRANCH=${{ github.ref_name }}
#          docker buildx bake -f docker-compose.yml --push

  deploy-in-swarm:
#    needs: build-push-deploy
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v3
    - run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        echo "${{ secrets.SERVER_SSH_KEY_PUB }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
    #- uses: shimataro/ssh-key-action@v2
    #  with:
    #    known_hosts: ${{secets.SERVER_USERNAME}}@${{ secrets.SERVER_HOST }}
    #    key: ${{ secrets.SERVER_SSH_KEY }}
    - run: |
        echo "${{ secrets.SERVER_AUTHORIZE_REGISRY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker context create remote-server --docker "host=ssh://${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}"
        docker --context remote-server stack deploy -f docker/docker-compose-deploy.yaml stack_my_app --with-registry-auth
